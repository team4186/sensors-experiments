buildscript {
    ext.kotlin_version = '1.1.4-2'
//    repositories {
//        mavenCentral()
//    }
//    dependencies {
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//    }
}


plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2017.1.5"
    id "org.jetbrains.kotlin.jvm" version  '1.1.4-2'
}

repositories {
    mavenCentral()
    jcenter()
}

frc {
    team = "4186"
    robotClass = "org.usfirst.frc.team4186.robot.Robot"
    deploy = true
}

wpi {
    wpilibVersion = "+"
    // The WPILib version to use. For this version of GradleRIO, must be a 2017 version
    ntcoreVersion = "+"                   // The NetworkTables Core version to use.
    opencvVersion = "3.1.0"                   // The OpenCV version to use
    cscoreVersion = "+"                   // The CSCore version to use

    talonSrxVersion = "+"                 // The CTRE Toolsuite (Talon SRX) version to use.
    navxVersion = "+"                     // The NavX Library version to use.
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

dependencies {
    compile wpilib()
    compile talonSrx()
    compile navx()

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile 'com.github.salomonbrys.kodein:kodein:4.1.0'
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.18"

    testCompile 'junit:junit:4.12'
    testCompile 'com.nhaarman:mockito-kotlin-kt1.1:+'
    testCompile 'org.mockito:mockito-core:2.+'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes 'Main-Class': 'edu.wpi.first.wpilibj.RobotBase'
        attributes 'Robot-Class': frc.robotClass
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}